CREATE TABLE IF NOT EXISTS PARAMETERS
(
    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    parameter_name         VARCHAR                                 NOT NULL,
    unit_measurement        VARCHAR                                 NOT NULL,
    use_calculate_thickness BOOLEAN,
    actions_on_parameter    VARCHAR                                 NOT NULL,
    CONSTRAINT pk_parameters PRIMARY KEY (id),
    CONSTRAINT UQ_PARAMETERS UNIQUE (parameter_name, unit_measurement)
);

CREATE TABLE IF NOT EXISTS DEFECTS
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_type_id     BIGINT                                  NOT NULL,
    defect_name           VARCHAR                                 NOT NULL,
    not_meet_requirements BOOLEAN                                 NOT NULL,
    use_to_calculate      BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_defect PRIMARY KEY (id),
    CONSTRAINT UQ_DEFECTS UNIQUE (equipment_type_id, defect_name)
);

CREATE TABLE IF NOT EXISTS COMPLETED_REPAIRS
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_type_id BIGINT                                  NOT NULL,
    repair_name       VARCHAR                                 NOT NULL,
    CONSTRAINT pk_completedRepairs PRIMARY KEY (id),
    CONSTRAINT UQ_COMPLETED_REPAIRS UNIQUE (equipment_type_id, repair_name)
);

CREATE TABLE IF NOT EXISTS DEFECTS_PARAMETERS
(
    defect_id    BIGINT,
    parameter_id BIGINT,
    CONSTRAINT pk_defects_of_parameters PRIMARY KEY (defect_id, parameter_id)
);

CREATE TABLE IF NOT EXISTS COMPLETED_REPAIRS_PARAMETERS
(
    repair_id    BIGINT,
    parameter_id BIGINT,
    CONSTRAINT pk_completed_repairs_of_parameters PRIMARY KEY (repair_id, parameter_id)
);

CREATE TABLE IF NOT EXISTS RECOMMENDATIONS
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_type_id   BIGINT                                  NOT NULL,
    recommendation_text VARCHAR                                 NOT NULL,
    CONSTRAINT pk_recommendation PRIMARY KEY (id),
    CONSTRAINT UQ_RECOMMENDATIONS UNIQUE (equipment_type_id, recommendation_text)
);

CREATE TABLE IF NOT EXISTS ACCEPTABLE_THICKNESS
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_type_id  BIGINT                                  NOT NULL,
    element_id         BIGINT                                  NOT NULL,
    part_element_id    BIGINT,
    diameter           INTEGER,
    acceptable_min     FLOAT,
    acceptable_percent INTEGER,
    min_hardness       INTEGER,
    max_hardness       INTEGER,
    measurement_error  FLOAT,
    CONSTRAINT pk_acceptableThickness PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PERMISSIBLE_DEVIATIONS_GEODESY
(
    id                                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_type_id                 BIGINT                                  NOT NULL,
    fulls                             BOOLEAN                                 NOT NULL,
    old                               BOOLEAN                                 NOT NULL,
    acceptable_precipitation          INTEGER                                 NOT NULL,
    max_difference_neighboring_points INTEGER                                 NOT NULL,
    max_difference_diametric_points   INTEGER                                 NOT NULL,
    measurement_error                 INTEGER                                 NOT NULL,
    number_measurements               INTEGER                                 NOT NULL,
    CONSTRAINT pk_permissibleDeviationsGeodesy PRIMARY KEY (id),
    CONSTRAINT UQ_PERMISSIBLE_DEVIATIONS_GEODESY UNIQUE (equipment_type_id, fulls, old)
);

CREATE TABLE IF NOT EXISTS ACCEPTABLE_THICKNESS
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_type_id  BIGINT                                  NOT NULL,
    element_id         BIGINT                                  NOT NULL,
    part_element_id    BIGINT,
    diameter           INTEGER,
    acceptable_min     FLOAT,
    acceptable_percent INTEGER,
    min_hardness       INTEGER,
    max_hardness       INTEGER,
    measurement_error  FLOAT,
    CONSTRAINT pk_acceptableThickness PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS EQUIPMENT_DIAGNOSED
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    task_journal_id   BIGINT                                  NOT NULL,
    equipment_type_id BIGINT                                  NOT NULL,
    equipment_id      BIGINT                                  NOT NULL,
    equipment_full    BOOLEAN,
    equipment_old     BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_equipmentDiagnosed PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS GEODESIC_MEASUREMENTS
(
    id                          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_diagnosed_id      BIGINT                                  NOT NULL,
    sequential_number           INTEGER                                 NOT NULL,
    number_measurement_location INTEGER                                 NOT NULL,
    reference_point_value       INTEGER,
    control_point_value         INTEGER                                 NOT NULL,
    transition_value            INTEGER,
    CONSTRAINT pk_geodesicMeasurement PRIMARY KEY (id),
    CONSTRAINT FK_GEODESIC_MEASUREMENTS_ON_EQUIPMENT_DIAGNOSED
        FOREIGN KEY (equipment_diagnosed_id) REFERENCES equipment_diagnosed (id)
);

CREATE TABLE IF NOT EXISTS CONTROL_POINT_MEASUREMENTS
(
    id                     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_diagnosed_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_controlPointMeasurement PRIMARY KEY (id),
    CONSTRAINT FK_CONTROL_POINTS_MEASUREMENTS_ON_EQUIPMENT_DIAGNOSED
        FOREIGN KEY (equipment_diagnosed_id) REFERENCES equipment_diagnosed (id)
);

CREATE TABLE IF NOT EXISTS CONTROL_POINTS
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    place_number      INTEGER                                 NOT NULL,
    calculated_height INTEGER                                 NOT NULL,
    deviation         INTEGER                                 NOT NULL,
    measurement_id    BIGINT                                  NOT NULL,
    CONSTRAINT pk_controlPoint PRIMARY KEY (id),
    CONSTRAINT FK_CONTROL_POINTS_ON_CONTROL_POINTS_MEASUREMENTS
        FOREIGN KEY (measurement_id) REFERENCES control_point_measurements (id)
);

CREATE TABLE IF NOT EXISTS POINTS_DIFFERENCE
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    type                 VARCHAR                                 NOT NULL,
    first_place_number   INTEGER                                 NOT NULL,
    second_place_number  INTEGER                                 NOT NULL,
    difference           INTEGER                                 NOT NULL,
    acceptable_deviation BOOLEAN,
    measurement_id       BIGINT                                  NOT NULL,
    CONSTRAINT pk_pointDifference PRIMARY KEY (id),
    CONSTRAINT FK_POINTS_DIFFERENCE_ON_CONTROL_POINTS_MEASUREMENTS
        FOREIGN KEY (measurement_id) REFERENCES control_point_measurements (id)
);

CREATE TABLE IF NOT EXISTS REFERENCE_POINTS
(
    id                       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_diagnosed_id   BIGINT                                  NOT NULL,
    place_number             INTEGER                                 NOT NULL,
    calculated_height        INTEGER                                 NOT NULL,
    deviation                INTEGER                                 NOT NULL,
    precipitation            INTEGER,
    acceptable_deviation     BOOLEAN,
    acceptable_precipitation BOOLEAN,
    CONSTRAINT pk_referencePoint PRIMARY KEY (id),
    CONSTRAINT FK_REFERENCE_POINTS_ON_EQUIPMENT_DIAGNOSED
        FOREIGN KEY (equipment_diagnosed_id) REFERENCES equipment_diagnosed (id)
);

CREATE TABLE IF NOT EXISTS DEVIATION_YEARS
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    reference_point_id BIGINT                                  NOT NULL,
    year               INTEGER                                 NOT NULL,
    deviation          INTEGER                                 NOT NULL,
    CONSTRAINT pk_deviationYear PRIMARY KEY (id),
    CONSTRAINT FK_DEVIATION_YEARS_ON_REFERENCE_POINTS FOREIGN KEY (reference_point_id) REFERENCES reference_points (id)
);

CREATE TABLE IF NOT EXISTS HARDNESS_MEASUREMENTS
(
    id                     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_diagnosed_id BIGINT                                  NOT NULL,
    element_id             BIGINT                                  NOT NULL,
    part_element_id        BIGINT,
    measurement_number     INTEGER                                 NOT NULL,
    measurement_value      INTEGER                                 NOT NULL,
    diameter               INTEGER,
    acceptable_value       BOOLEAN,
    CONSTRAINT pk_hardnessMeasurement PRIMARY KEY (id),
    CONSTRAINT FK_HARDNESS_MEASUREMENTS_ON_EQUIPMENT_DIAGNOSED
        FOREIGN KEY (equipment_diagnosed_id) REFERENCES equipment_diagnosed (id)
);

CREATE TABLE IF NOT EXISTS VISUAL_MEASURING_SURVEYS
(
    id                     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    equipment_diagnosed_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_visualMeasuringSurvey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS DEFECT_MEASUREMENTS
(
    id                         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    element_id                 BIGINT                                  NOT NULL,
    part_element_id            BIGINT,
    defect_id                  BIGINT                                  NOT NULL,
    defect_name                VARCHAR                                 NOT NULL,
    not_meet_requirements      BOOLEAN                                 NOT NULL,
    use_to_calculate           BOOLEAN                                 NOT NULL,
    visual_measuring_survey_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_defectMeasurement PRIMARY KEY (id),
    CONSTRAINT UQ_DEFECT_MEASUREMENTS UNIQUE (element_id, part_element_id, defect_name),
    CONSTRAINT FK_DEFECT_MEASUREMENTS_ON_VISUAL_MEASUREMENT_SURVEYS
        FOREIGN KEY (visual_measuring_survey_id) REFERENCES visual_measuring_surveyS (id)

);

CREATE TABLE IF NOT EXISTS DETECTED_REPAIRS
(
    id                         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    element_id                 BIGINT                                  NOT NULL,
    part_element_id            BIGINT,
    repair_id                  BIGINT                                  NOT NULL,
    repair_name                VARCHAR                                 NOT NULL,
    visual_measuring_survey_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_detectedRepairs PRIMARY KEY (id),
    CONSTRAINT UQ_DEFECTED_REPAIRS UNIQUE (element_id, part_element_id, repair_name),
    CONSTRAINT FK_DETECTED_REPAIRS_ON_VISUAL_MEASUREMENT_SURVEYS
        FOREIGN KEY (visual_measuring_survey_id) REFERENCES visual_measuring_surveyS (id)

);

CREATE TABLE IF NOT EXISTS PARAMETER_MEASUREMENTS
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    parameter_name        VARCHAR                                 NOT NULL,
    parameters_value      DOUBLE PRECISION,
    min_value             DOUBLE PRECISION,
    max_value             DOUBLE PRECISION,
    unit_measurement      VARCHAR                                 NOT NULL,
    defect_measurement_id BIGINT                                  NOT NULL,
    repair_id             BIGINT                                  NOT NULL,
    CONSTRAINT pk_parameterMeasurement PRIMARY KEY (id),
    CONSTRAINT FK_PARAMETER_MEASUREMENTS_ON_DEFECT_MEASUREMENTS
        FOREIGN KEY (defect_measurement_id) REFERENCES defect_measurements (id),
    CONSTRAINT FK_PARAMETER_MEASUREMENTS_ON_DEFECTED_REPAIRS
        FOREIGN KEY (repair_id) REFERENCES detected_repairs (id)
);

CREATE TABLE IF NOT EXISTS VISUAL_INSPECTIONS
(
    id                         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    element_id                 BIGINT                                  NOT NULL,
    inspection                 VARCHAR                                 NOT NULL,
    visual_measuring_survey_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_visualInspection PRIMARY KEY (id),
    CONSTRAINT FK_VISUAL_INSPECTIONS_ON_VISUAL_MEASUREMENT_SURVEYS
        FOREIGN KEY (visual_measuring_survey_id) REFERENCES visual_measuring_surveyS (id)

);

